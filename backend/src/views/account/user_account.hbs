<link href="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.5.0/css/fileinput.min.css" media="all"
    rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.min.css"
    crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.5.0/js/fileinput.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/kartik-v/bootstrap-fileinput@5.5.0/themes/fa5/theme.min.js"></script>
<div class="container p-0 mb-3">
    <div class="text-start px-4 row" style="background-color: #eae7dc">
        <div class="card col-2 mt-3 border border-success rounded h-100">
            <div class="card-header fw-bold text-danger fs-4">
                Tài khoản
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <a href="/user/me" style="text-decoration: none; color: #ff550d">
                        Thông tin tài khoản
                    </a>
                </li>
                <li class="list-group-item">
                    <a href="/shippingAddress" style="text-decoration: none; color: black">Sổ địa chỉ</a>
                </li>
                <li class="list-group-item">
                    <a href="/order/me" style="text-decoration: none; color: black">Đơn hàng của tôi</a>
                </li>
            </ul>
        </div>
        <div class="col-10 pe-0">
            <div class="container mt-3 border border-success rounded text-start" style="background-color: FFFFFF">
                <h5 class="mt-2 mb-3">Thông tin tài khoản</h5>
                <form id="updateForm">
                    <div class="mb-3 row">
                        <label for="inputUsername" class="col-sm-2 col-form-label text-muted">Username*</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="inputUsername" value="{{user.userName}}"
                                disabled />
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="inputName" class="col-sm-2 col-form-label text-muted">Họ tên</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="inputName" name="fullName"
                                value="{{user.fullName}}" />
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="inputTel" class="col-sm-2 col-form-label text-muted">Số điện thoại</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="inputTel" name="phoneNumber"
                                value="{{user.phoneNumber}}" />
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="inputEmail" class="col-sm-2 col-form-label text-muted">Email</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="inputEmail" value="{{user.email}}" disabled />
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="inputGender" class="col-sm-2 col-form-label text-muted">Giới tính</label>
                        <div class="col-sm-10">
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="gender" id="flexRadioMale" value="0"
                                    {{#if user.gender}}{{else}}checked{{/if}} />
                                <label class="form-check-label" for="flexRadioMale">
                                    Nam
                                </label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="gender" id="flexRadioFemale"
                                    value="1" {{#if user.gender}}checked{{/if}} />
                                <label class="form-check-label" for="flexRadioFemale">
                                    Nữ
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="inputDob" class="col-sm-2 col-form-label text-muted">Birthday</label>
                        <div class="col-sm-10">
                            <input type="date" class="form-control" id="inputDob" name="birthday"
                                value='{{user.birthday}}' />
                        </div>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-danger mb-2">
                            Lưu thay đổi
                        </button>
                    </div>
                </form>
            </div>
            <div class="container border border-success rounded text-start"
                style="background-color: FFFFFF; margin-top:12px">
                <h5 class="mt-2 mb-3">Thay đổi mật khẩu</h5>
                <form id="changePassword">
                    <div class="mb-3 row">
                        <label for="inputPassword" class="col-sm-3 col-form-label text-muted">Mật khẩu hiện tại*</label>
                        <div class="col-sm-9">
                            <input type="password" class="form-control" name="currentPassword" id="inputOldPassword"
                                required>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="inputPassword" class="col-sm-3 col-form-label  text-muted">Mật khẩu mới*</label>
                        <div class="col-sm-9">
                            <input type="password" class="form-control" name="password" id="inputNewPassword" required>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="inputPassword" class="col-sm-3 col-form-label  text-muted">Nhập lại mật
                            khẩu*</label>
                        <div class="col-sm-9">
                            <input type="password" class="form-control" name="reNewPass" id="inputRePassword" required>
                        </div>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-danger mb-2">
                            Đổi mật khẩu
                        </button>
                    </div>
                </form>
            </div>
            <div class="container mt-3 border border-success rounded text-start" style="background-color: FFFFFF">
                <h5 class="mt-2 mb-3">Thay đổi avatar</h5>
                <form id="uploadAvatar" enctype="multipart/form-data">
                    <button type="submit" class="btn btn-danger mb-2">Cập nhật</button>
                    <!-- Add more form fields as needed -->
                    <div class="mb-3">
                        <input type="file" name="avatar" id="formFile" class="form-control" accept="image/*" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    $('#updateForm').on('submit', function (event) {
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success ms-3",
                cancelButton: "btn btn-danger",
            },
            buttonsStyling: false,
        });
        var formData = $(this).serializeArray();
        let user = {};
        formData.forEach(function (item) {
            user[item.name] = item.value
        })

        $.ajax({
            type: 'PATCH',
            url: '/user/updateMe',
            data: user,
            success: function (response) {
                let timerInterval;
                swalWithBootstrapButtons.fire({
                    title: "Đã cập nhật!",
                    text: "Thay đổi thông tin thành công",
                    icon: "success",
                    timer: 1500,
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                        const timer = Swal.getPopup().querySelector("b");
                        timerInterval = setInterval(() => {
                            timer.textContent = `${Swal.getTimerLeft()}`;
                        }, 100);
                    },
                    willClose: () => {
                        clearInterval(timerInterval);
                    }
                }).then((result) => {
                    if (result.dismiss === Swal.DismissReason.timer) {
                        location.reload();
                    }
                });
            },
            error: function (error) {
                swalWithBootstrapButtons.fire({
                    title: 'Cập nhật thất bại',
                    icon: "error",
                });
            }
        });
    });

    $('#changePassword').on('submit', function (event) {
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success ms-3",
                cancelButton: "btn btn-danger",
            },
            buttonsStyling: false,
        });
        var formData = $(this).serializeArray();
        let password = {};
        formData.forEach(function (item) {
            password[item.name] = item.value
        })
        if (password.password !== password.reNewPass) {
            swalWithBootstrapButtons.fire({
                title: 'Mật khẩu không khớp',
                icon: "error",
            });
        }
        else {
            $.ajax({
                type: 'PATCH',
                url: '/user/updatePassword',
                data: password,
                success: function (response) {
                    let timerInterval;
                    swalWithBootstrapButtons.fire({
                        title: "Đã cập nhật!",
                        text: "Thay đổi mật khẩu thành công",
                        icon: "success",
                        timer: 1500,
                        timerProgressBar: true,
                        didOpen: () => {
                            Swal.showLoading();
                            const timer = Swal.getPopup().querySelector("b");
                            timerInterval = setInterval(() => {
                                timer.textContent = `${Swal.getTimerLeft()}`;
                            }, 100);
                        },
                        willClose: () => {
                            clearInterval(timerInterval);
                        }
                    }).then(async (result) => {
                        if (result.dismiss === Swal.DismissReason.timer) {
                            await fetch('/logout', {
                                method: 'delete',
                            });
                            window.location.href = "/login";
                        }
                    });
                },
                error: function (error) {
                    swalWithBootstrapButtons.fire({
                        title: 'Thay đổi mật khẩu thất bại',
                        icon: "error",
                    });
                }
            });
        }
    });

    $("#formFile").fileinput({
        theme: 'fa6', showUpload: false,
        previewFileType: 'any'
    });

    $('#uploadAvatar').on('submit', function (event) {
        event.preventDefault();
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success ms-3",
                cancelButton: "btn btn-danger",
            },
            buttonsStyling: false,
        });
        const formData = new FormData(this);

        const avatar = {};
        formData.forEach(function (value, key) {
            avatar[key] = value;
        });

        $.ajax({
            type: 'PATCH',
            url: '/user/avatar',
            data: avatar,
            processData: false,
            contentType: false,
            success: function (response) {
                let timerInterval;
                swalWithBootstrapButtons.fire({
                    title: "Đã cập nhật!",
                    text: "Thay đổi ảnh đại diện thành công",
                    icon: "success",
                    timer: 1500,
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                        const timer = Swal.getPopup().querySelector("b");
                        timerInterval = setInterval(() => {
                            timer.textContent = `${Swal.getTimerLeft()}`;
                        }, 100);
                    },
                    willClose: () => {
                        clearInterval(timerInterval);
                    }
                }).then(async (result) => {
                    if (result.dismiss === Swal.DismissReason.timer) {
                        location.reload();
                    }
                });
            },
            error: function (error) {
                swalWithBootstrapButtons.fire({
                    title: 'Thay đổi ảnh đại diện thất bại',
                    text: error.responseJSON,
                    icon: "error",
                });
            }
        });
    });
</script>