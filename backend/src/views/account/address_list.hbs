<div class="text-start px-4 row m-0 pb-3" style="background-color: #eae7dc">
    <div class="card col-2 mt-3 border border-success rounded h-100">
        <div class="card-header fw-bold text-danger fs-4">
            Tài khoản
        </div>
        <ul class="list-group list-group-flush">
            <li class="list-group-item">
                <a href="/users/me" style="text-decoration: none; color: black">
                    Thông tin tài khoản
                </a>
            </li>
            <li class="list-group-item">
                <a href="/shippingAddress" style="text-decoration: none; color: #ff550d">Sổ địa chỉ</a>
            </li>
            <li class="list-group-item">
                <a href="/order/me" style="text-decoration: none; color: black">Đơn hàng của tôi</a>
            </li>
        </ul>
    </div>
    <div class="container mt-3 col-9 border border-success rounded text-start" style="background-color: FFFFFF">
        <div class="container row position-relative">
            <h4 class="mt-2 mb-3 col-3">SỔ ĐỊA CHỈ</h4>
            <button type="button" class="btn btn-danger w-auto fw-bold mt-2 mb-3 position-absolute top-0 end-0"
                data-toggle="modal" data-target="#addModal">
                Thêm địa chỉ mới
            </button>
        </div>
        <table class="table table-striped table-hover text-center">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Tên đầy đủ</th>
                    <th scope="col">Địa chỉ chi tiết</th>
                    <th scope="col">Số điện thoại</th>
                    <th scope="col">Địa chỉ mặc định</th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                {{#each shippingAddresses}}
                <tr>
                    <th scope="row">{{index @index}}</th>
                    <td>{{fullName}}</td>
                    <td>
                        {{detailedAddress}}
                    </td>
                    <td>{{phoneNumber}}</td>
                    <td>
                        <input class="form-check-input" type="radio" name="flexRadioDefault"
                            id="flexRadioDefault{{index @index}}" {{#if isDefault}} checked {{/if}} data-id="{{addrId}}"
                            value="1" />
                    </td>
                    <td>
                        <i class="fa-solid fa-pen-to-square update" data-toggle="modal" data-target="#editModal"
                            data-id="{{addrId}}" data-name="{{fullName}}" data-address="{{address}}"
                            data-ward="{{wardName}}" data-dist="{{distName}}" data-prov="{{provName}}"
                            data-phone="{{phoneNumber}}" style="cursor: pointer"></i>
                    </td>
                    <td>
                        <i class="fa-solid fa-trash delete" style="cursor: pointer" data-id="{{addrId}}"></i>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<!-- Product Detail/Edit Modal -->
<div class="modal" id="editModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Sửa địa chỉ</h4>
                <button type="button" class="close" data-dismiss="modal">
                    &times;
                </button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <!-- Add your form fields for product details here -->
                <form action="/edit" method="post">
                    <div class="form-group">
                        <label for="name">Tên đầy đủ:</label>
                        <input type="text" class="form-control" id="EName" name="name" />
                    </div>
                    <div class="form-group">
                        <label for="tel">Số điện thoại</label>
                        <input type="text" class="form-control" id="ETel" name="tel" />
                    </div>
                    <div class="form-group">
                        <label for="address">Địa chỉ chi tiết</label>
                        <input type="text" class="form-control" id="EAdd" name="address" />
                    </div>
                    <div class="form-group">
                        <label for="ward">Phường/Xã</label>
                        <input type="text" class="form-control" id="EWard" name="ward" />
                    </div>
                    <div class="form-group">
                        <label for="district">Quận/Huyện</label>
                        <input type="text" class="form-control" id="EDistrict" name="district" />
                    </div>
                    <div class="form-group">
                        <label for="province">Tỉnh/Thành phố</label>
                        <input type="text" class="form-control" id="EProvince" name="province" />
                    </div>
                    <div hidden class="form-group">
                        <label for="addressID">ID:</label>
                        <input type="text" class="form-control" id="EAddId" name="addressID" />
                    </div>
                    <!-- Add more form fields as needed -->
                    <button type="submit" class="btn btn-primary mt-2">
                        Lưu thay đổi
                    </button>
                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary m-10" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="addModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Thêm địa chỉ</h4>
                <button type="button" class="close" data-dismiss="modal">
                    &times;
                </button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <!-- Add your form fields for product details here -->
                <form action="/shippingAddresses/" method="post">
                    <div class="form-group">
                        <label for="name">Tên đầy đủ:</label>
                        <input type="text" class="form-control" id="EName" name="fullName" />
                    </div>
                    <div class="form-group">
                        <label for="tel">Số điện thoại</label>
                        <input type="text" class="form-control" id="ETel" name="phoneNumber" />
                    </div>
                    <div class="form-group">
                        <label for="address">Địa chỉ chi tiết</label>
                        <input type="text" class="form-control" id="EAdd" name="address" />
                    </div>
                    <div class="form-group">
                        <label for="ward">Phường/Xã</label>
                        <input type="text" class="form-control" id="EWard" name="ward" />
                    </div>
                    <div class="form-group">
                        <label for="district">Quận/Huyện</label>
                        <input type="text" class="form-control" id="EDistrict" name="district" />
                    </div>
                    <div class="form-group">
                        <label for="province">Tỉnh/Thành phố</label>
                        <input type="text" class="form-control" id="EProvince" name="province" />
                    </div>
                    <div hidden class="form-group">
                        <label for="addressID">ID:</label>
                        <input type="text" class="form-control" id="EAddId" name="addressID" />
                    </div>
                    <!-- Add more form fields as needed -->
                    <button type="submit" class="btn btn-primary mt-2">
                        Thêm
                    </button>
                    <!-- Add more form fields as needed -->
                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary m-10" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    $('#addModal').on('submit', function () {
        console.log('1');
    })
    $(".update").click(function (e) {
        const addrId = $(this).data("id");
        const address = $(this).data("address");
        const ward = $(this).data("ward");
        const dist = $(this).data("dist");
        const prov = $(this).data("prov");
        const name = $(this).data("name");
        const phone = $(this).data("phone");
        $("#EName").val(name);
        $("#ETel").val(phone);
        $("#EAdd").val(address);
        $("#EWard").val(ward);
        $("#EDistrict").val(dist);
        $("#EProvince").val(prov);
        $("#EAddId").val(addrId);
    });
    $(".del-btn").click(function (e) {
        const addrId = $(this).data("id");
        $("#DproductId").val(productId);
    });
    $(".delete").click(function () {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success ms-3",
                cancelButton: "btn btn-danger",
            },
            buttonsStyling: false,
        });
        swalWithBootstrapButtons
            .fire({
                title: "Bạn có chắc là muốn xóa địa chỉ này?",
                text: "Bạn sẽ không thể hoàn tác!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Xóa!",
                cancelButtonText: "Hủy.",
                reverseButtons: true,
            })
            .then((result) => {
                if (result.isConfirmed) {
                    const addrId = $(this).data("id");
                    $.ajax({
                        type: 'DELETE',
                        url: `/shippingAddress/${addrId}`,
                        success: function (response) {
                            // Handle success, e.g., show a success message
                            let timerInterval;
                            swalWithBootstrapButtons.fire({
                                title: "Đã xóa!",
                                text: "Địa chỉ đã xóa thành công",
                                icon: "success",
                                timer: 1500,
                                timerProgressBar: true,
                                didOpen: () => {
                                    Swal.showLoading();
                                    const timer = Swal.getPopup().querySelector("b");
                                    timerInterval = setInterval(() => {
                                        timer.textContent = `${Swal.getTimerLeft()}`;
                                    }, 100);
                                },
                                willClose: () => {
                                    clearInterval(timerInterval);
                                }
                            }).then((result) => {
                                /* Read more about handling dismissals below */
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    location.reload();
                                }
                            });
                        },
                        error: function (error) {
                            // Handle error, e.g., show an error message
                            swalWithBootstrapButtons.fire({
                                title: 'Xóa thất bại',
                                //text: error.responseJSON.message,
                                icon: "error",
                            });
                        }
                    });

                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire({
                        title: "Đã hủy",
                        icon: "error",
                    });
                }
            });
    });
    $(".form-check-input").click(function (e) {
        const addrId = $(this).data("id");
        const address = { isDefault: $(this).val() }
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success ms-3",
                cancelButton: "btn btn-danger",
            },
            buttonsStyling: false,
        });
        $.ajax({
            type: 'PATCH',
            url: `/shippingAddress/${addrId}`,
            data: address,
            success: function (response) {
                // Handle success, e.g., show a success message
                let timerInterval;
                swalWithBootstrapButtons.fire({
                    title: "Cập nhật thành công!",
                    text: "Địa chỉ mặc định đã thay đổi thành công!",
                    icon: "success",
                    timer: 1500,
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                        const timer = Swal.getPopup().querySelector("b");
                        timerInterval = setInterval(() => {
                            timer.textContent = `${Swal.getTimerLeft()}`;
                        }, 100);
                    },
                    willClose: () => {
                        clearInterval(timerInterval);
                    }
                }).then((result) => {
                    /* Read more about handling dismissals below */
                    if (result.dismiss === Swal.DismissReason.timer) {
                        location.reload();
                    }
                });

            },
            error: function (error) {
                // Handle error, e.g., show an error message
                swalWithBootstrapButtons.fire({
                    title: 'Thay đổi thất bại',
                    //text: error.responseJSON.message,
                    icon: "error",
                });
            }
        });
    })
</script>